version: '3'

networks:
  transcendence-network:
    name: transcendence-network

services:
  postgresql:
    image: postgres:15.5-alpine3.18
    container_name: postgresql
    hostname: postgresql
    ports:
      - "5432:5432"
    networks:
      - transcendence-network
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_DB_NAME: "${POSTGRES_DB_NAME}"
    restart: unless-stopped
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 2s
      timeout: 2s
      retries: 20
  backend:
    container_name: backend
    build: backend/
    networks:
      - transcendence-network
    ports:
      - "8000:8000"
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_DB_NAME: "${POSTGRES_DB_NAME}"
      DJANGO_DEBUG: "True"  # if this value is not set or set to anything not 'False', django will
                            # run in production mode
      DJANGO_SECRET_KEY: "${DJANGO_SECRET_KEY}"
    depends_on:
      postgresql:
        condition: service_healthy
    volumes:
      - backend:/app
    restart: unless-stopped

volumes:
  db:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${DB_PATH}"
  backend:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${PWD}/backend"
